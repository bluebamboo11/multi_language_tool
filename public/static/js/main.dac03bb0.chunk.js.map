{"version":3,"sources":["component/LabelItem/LabelItem.js","component/MyVerticallyCenteredModal/MyVerticallyCenteredModal.js","component/MyTable/MyTable.js","convertUtf8.js","component/content/Content.js","App.js","Translate.js","serviceWorker.js","index.js"],"names":["LabelItem","_this","this","react_default","a","createElement","onClick","props","editLabel","keyData","index","className","label","Component","MyVerticallyCenteredModal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","Modal_default","assign","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","Form_default","Group","controlId","Control","as","rows","type","placeholder","onChange","handleChange","name","required","value","Footer","Button_default","onSubmit","MyTable","renderRow","bind","assertThisInitialized","onEdit","onHide","onRemove","modalShow","labelSelect","event","setState","target","listLabel","slice","key","onUpdate","splice","_this2","map","fr","LabelItem_LabelItem","it","es","en","date","Table_default","striped","bordered","react_clipboard_default","data-clipboard-target","MyVerticallyCenteredModal_MyVerticallyCenteredModal","show","convertCharStr2jEsc","str","parameters","suppCP","pad","highsurrogate","outputString","split","i","length","cc","charCodeAt","match","toString","toUpperCase","dec2hex4","String","fromCharCode","join","textString","hexequiv","Array","Content","initData","data","concat","page","select","forEach","__html","style","width","Card_default","padding","marginBottom","dangerouslySetInnerHTML","data-clipboard-text","initClipboard","App","validated","handleSubmit","handleChangeKey","handleChangePage","previousState","objectSpread","now","moment","format","preventDefault","stopPropagation","text","callback","currentTarget","checkValidity","translation","convertChart","toLocaleLowerCase","push","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","json","responseJson","catch","error","console","_this3","Container_default","marginTop","noValidate","e","Row","Label","column","sm","Col_default","Feedback","variant","Tabs_default","defaultActiveKey","Tab_default","eventKey","title","component_MyTable_MyTable","Content_Content","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dac03bb0.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\n\r\nexport default class LabelItem extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <td onClick={()=>{this.props.editLabel(this.props.keyData,this.props.index)}} className=\"on-hover\">{this.props.label}</td>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\n\r\nexport default class MyVerticallyCenteredModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {label: this.props.label};\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                       Edit\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                    <Form.Group  controlId=\"labelKey\">\r\n                        <Form.Control as=\"textarea\" rows=\"3\" type=\"text\" placeholder=\"Enter text\" onChange={this.props.handleChange}\r\n                                      name=\"key\" required value={this.props.label}/>\r\n                    </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={this.props.onSubmit}>Ok</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Clipboard from 'react-clipboard.js';\r\nimport LabelItem from \"../LabelItem/LabelItem\";\r\n\r\n\r\nimport MyVerticallyCenteredModal from \"../MyVerticallyCenteredModal/MyVerticallyCenteredModal\";\r\n\r\n\r\nclass MyTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.renderRow = this.renderRow.bind(this);\r\n        this.onEdit = this.onEdit.bind(this);\r\n        this.onHide = this.onHide.bind(this);\r\n        this.onRemove = this.onRemove.bind(this);\r\n        this.editLabel = this.editLabel.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {modalShow: false, labelSelect: ''};\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({labelSelect: event.target.value});\r\n    }\r\n\r\n    onEdit() {\r\n        let listLabel = this.props.listLabel.slice();\r\n        listLabel[this.index][this.key] = this.state.labelSelect;\r\n        this.props.onUpdate(listLabel);\r\n        this.setState({modalShow: false});\r\n    }\r\n\r\n    onHide() {\r\n        this.setState({modalShow: false})\r\n    }\r\n\r\n    editLabel(key, index) {\r\n        this.key = key;\r\n        this.index = index;\r\n        this.setState({modalShow: true, labelSelect: this.props.listLabel[index][key]})\r\n    }\r\n\r\n    onRemove(index) {\r\n        this.props.listLabel.splice(index, 1);\r\n        let listLabel = this.props.listLabel.slice();\r\n        this.props.onUpdate(listLabel);\r\n\r\n    }\r\n\r\n    renderRow() {\r\n        const listLabel = this.props.listLabel;\r\n        return listLabel.map((label, index) => {\r\n                return <tr key={label.fr}>\r\n                    <td>{index}</td>\r\n                    <LabelItem editLabel={this.editLabel} keyData=\"key\" label={label.key} index={index}/>\r\n                    <LabelItem editLabel={this.editLabel} keyData=\"fr\" label={label.fr} index={index}/>\r\n                    <LabelItem editLabel={this.editLabel} keyData=\"it\" label={label.it} index={index}/>\r\n                    <LabelItem editLabel={this.editLabel} keyData=\"es\" label={label.es} index={index}/>\r\n                    <LabelItem editLabel={this.editLabel} keyData=\"en\" label={label.en} index={index}/>\r\n                    <LabelItem editLabel={this.editLabel} keyData=\"date\" label={label.date} index={index}/>\r\n                    <td className=\"on-hover\" onClick={() => {\r\n                        this.onRemove(index)\r\n                    }}>Del\r\n                    </td>\r\n                </tr>\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table striped bordered id='dataLabel'>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Key</th>\r\n                        <th>FR</th>\r\n                        <th>IT</th>\r\n                        <th>ES</th>\r\n                        <th>EN</th>\r\n                        <th>Last modified</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.renderRow()}\r\n                    </tbody>\r\n                </Table>\r\n                <Clipboard data-clipboard-target=\"#dataLabel\">\r\n                    copy to clipboard\r\n                </Clipboard>\r\n                <MyVerticallyCenteredModal\r\n                    label={this.state.labelSelect}\r\n                    show={this.state.modalShow}\r\n                    onSubmit={this.onEdit}\r\n                    onHide={this.onHide}\r\n                    handleChange={this.handleChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyTable;\r\n","export  function convertjEsc2Char ( str, shortEscapes ) {\r\n    str = str.split('\\\\u2019').join('\\'')\r\n    // converts a string containing JavaScript or Java escapes to a string of characters\r\n    // str: string, the input\r\n    // shortEscapes: boolean, if true the function will convert \\b etc to characters\r\n\r\n    // convert ES6 escapes to characters\r\n    str = convertuBracket2Char(str)\r\n\r\n    // convert \\U and 6 digit escapes to characters\r\n    str = convertU0000002Char(str)\r\n\r\n    // convert \\u and 4 digit escapes to characters\r\n    str = convertU00002Char(str)\r\n\r\n    // convert \\x and 2 digit escapes to characters\r\n    str = convertx002Char(str)\r\n\r\n    // convert \\b etc to characters, if flag set\r\n    if (shortEscapes) {\r\n        str = convertSlashChar2Char(str)\r\n    }\r\n    return str\r\n}\r\nexport  function convertCharStr2jEsc ( str, parameters ) {\r\n    // Converts a string of characters to JavaScript escapes\r\n    // str: sequence of Unicode characters\r\n    // parameters: a semicolon separated string showing ids for checkboxes that are turned on\r\n    let highsurrogate = 0;\r\n    let suppCP;\r\n    let pad;\r\n    let n = 0;\r\n    let pars = parameters.split(';')\r\n    let outputString = '';\r\n    for (let i = 0; i < str.length; i++) {\r\n        let cc = str.charCodeAt(i);\r\n        if (cc < 0 || cc > 0xFFFF) {\r\n            outputString += '!Error in convertCharStr2UTF16: unexpected charCodeAt result, cc=' + cc + '!';\r\n        }\r\n        if (highsurrogate != 0) { // this is a supp char, and cc contains the low surrogate\r\n            if (0xDC00 <= cc && cc <= 0xDFFF) {\r\n                suppCP = 0x10000 + ((highsurrogate - 0xD800) << 10) + (cc - 0xDC00);\r\n                if (parameters.match(/cstyleSC/)) {\r\n                    pad = suppCP.toString(16);\r\n                    while (pad.length < 8) { pad = '0'+pad; }\r\n                    outputString += '\\\\U'+pad;\r\n                }\r\n                else if (parameters.match(/es6styleSC/)) {\r\n                    pad = suppCP.toString(16).toUpperCase()\r\n                    outputString += '\\\\u{'+pad+'}'\r\n                }\r\n                else {\r\n                    suppCP -= 0x10000;\r\n                    outputString += '\\\\u'+ dec2hex4(0xD800 | (suppCP >> 10)) +'\\\\u'+ dec2hex4(0xDC00 | (suppCP & 0x3FF));\r\n                }\r\n                highsurrogate = 0;\r\n                continue;\r\n            }\r\n            else {\r\n                outputString += 'Error in convertCharStr2UTF16: low surrogate expected, cc=' + cc + '!';\r\n                highsurrogate = 0;\r\n            }\r\n        }\r\n        if (0xD800 <= cc && cc <= 0xDBFF) { // start of supplementary character\r\n            highsurrogate = cc;\r\n        }\r\n        else { // this is a BMP character\r\n            //outputString += dec2hex(cc) + ' ';\r\n            switch (cc) {\r\n                case 0: outputString += '\\\\0'; break;\r\n                case 8: outputString += '\\\\b'; break;\r\n                case 9: if (parameters.match(/noCR/)) {outputString += '\\\\t';} else {outputString += '\\t'}; break;\r\n                case 10: if (parameters.match(/noCR/)) {outputString += '\\\\n';} else {outputString += '\\n'}; break;\r\n                case 13: if (parameters.match(/noCR/)) {outputString += '\\\\r';} else {outputString += '\\r'}; break;\r\n                case 11: outputString += '\\\\v'; break;\r\n                case 12: outputString += '\\\\f'; break;\r\n                case 34: if (parameters.match(/noCR/)) {outputString += '\\\\\\\"';} else {outputString += '\"'}; break;\r\n                case 39: if (parameters.match(/noCR/)) {outputString += \"\\\\\\'\";} else {outputString += '\\''}; break;\r\n                case 92: outputString += '\\\\\\\\'; break;\r\n                default:\r\n                    if (cc > 0x1f && cc < 0x7F) {\r\n                        outputString += String.fromCharCode(cc)\r\n                    }\r\n                    else if (parameters.match(/es6styleSC/)) {\r\n                        pad = cc.toString(16).toUpperCase();\r\n                        outputString += '\\\\u{'+pad+'}'\r\n                    }\r\n                    else {\r\n                        pad = cc.toString(16).toUpperCase();\r\n                        while (pad.length < 4) { pad = '0'+pad; }\r\n                        outputString += '\\\\u'+pad\r\n                    }\r\n            }\r\n        }\r\n    }\r\n    outputString= outputString.split('\\'').join('\\\\u2019')\r\n    return outputString;\r\n}\r\nfunction  dec2hex4 ( textString ) {\r\n    let hexequiv = new Array (\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\");\r\n    return hexequiv[(textString >> 12) & 0xF] + hexequiv[(textString >> 8) & 0xF]\r\n        + hexequiv[(textString >> 4) & 0xF] + hexequiv[textString & 0xF];\r\n}\r\n\r\nfunction convertuBracket2Char ( str ) {\r\n    // converts a string containing \\u{...} escapes to a string of characters\r\n    // str: string, the input\r\n\r\n    // convert escapes to characters\r\n    str = str.replace(/\\\\u\\{([A-Fa-f0-9]{1,})\\}/g,\r\n        function(matchstr, parens) {\r\n            return hex2char(parens)\r\n        }\r\n    )\r\n    return str\r\n}\r\nfunction hex2char ( hex ) {\r\n    // converts a single hex number to a character\r\n    // note that no checking is performed to ensure that this is just a hex number, eg. no spaces etc\r\n    // hex: string, the hex codepoint to be converted\r\n    let result = ''\r\n    let n = parseInt(hex, 16)\r\n    if (n <= 0x10FFFF) result += String.fromCodePoint(n)\r\n    else result += 'hex2Char error: Code point out of range: '+dec2hex(n)\r\n    return result\r\n}\r\nfunction dec2hex ( textString ) {\r\n    return (textString+0).toString(16).toUpperCase();\r\n}\r\nfunction convertU0000002Char ( str ) {\r\n    // converts a string containing \\U + 6 digit escapes to a string of characters\r\n    // str: string, the input\r\n\r\n    // convert escapes to characters\r\n    str = str.replace(/\\\\U([A-Fa-f0-9]{8})/g,\r\n        function(matchstr, parens) {\r\n            return hex2char(parens)\r\n        }\r\n    )\r\n    return str\r\n}\r\nfunction convertU00002Char ( str ) {\r\n    // converts a string containing \\u + 6 digit escapes to a string of characters\r\n    // str: string, the input\r\n\r\n    // convert escapes to characters\r\n    str = str.replace(/\\\\u([A-Fa-f0-9]{4})/g,\r\n        function(matchstr, parens) {\r\n            return hex2char(parens)\r\n        }\r\n    )\r\n    return str\r\n}\r\nfunction convertx002Char ( str ) {\r\n    // converts a string containing \\x + 2 digit escapes to a string of characters\r\n    // str: string, the input\r\n\r\n    // convert escapes to characters\r\n    str = str.replace(/\\\\x([A-Fa-f0-9]{2})/g,\r\n        function(matchstr, parens) {\r\n            return hex2char(parens)\r\n        }\r\n    )\r\n    return str\r\n}\r\nfunction convertSlashChar2Char ( str ) {\r\n    // convert \\b etc to characters, if flag set\r\n    // str: string, the input\r\n\r\n    // convert escapes to characters\r\n    //str = str.replace(/\\\\0/g, '\\0');\r\n    str = str.replace(/\\\\b/g, '\\b');\r\n    str = str.replace(/\\\\t/g, '\\t');\r\n    str = str.replace(/\\\\n/g, '\\n');\r\n    str = str.replace(/\\\\v/g, '\\v');\r\n    str = str.replace(/\\\\f/g, '\\f');\r\n    str = str.replace(/\\\\r/g, '\\r');\r\n    str = str.replace(/\\\\\\'/g, '\\'');\r\n    str = str.replace(/\\\\\\\"/g, '\\\"');\r\n    str = str.replace(/\\\\\\\\/g, '\\\\');\r\n    return str\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Clipboard from 'react-clipboard.js';\r\nimport {convertCharStr2jEsc} from \"../../convertUtf8\";\r\n\r\n\r\nexport default class Content extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initData = this.initData.bind(this);\r\n\r\n    }\r\n\r\n    initData() {\r\n        let data = `#BEGIN PAGE: ${this.props.page}<br/>`;\r\n        const select = this.props.select;\r\n        this.props.listLabel.forEach((label) => {\r\n            data = `${data} ${label['key']} =  ${convertCharStr2jEsc(label[select],';;')}<br/>`;\r\n        });\r\n        data = `${data}#END PAGE: ${this.props.page}`;\r\n        return {__html: data}\r\n    }\r\n\r\n    initClipboard(){\r\n        let data = `#BEGIN PAGE: ${this.props.page}\\n`;\r\n        const select = this.props.select;\r\n        this.props.listLabel.forEach((label) => {\r\n            data = `${data} ${label['key']} =  ${convertCharStr2jEsc(label[select],';;')}\\n`;\r\n        });\r\n        data = `${data}#END PAGE: ${this.props.page}`;\r\n        return  data\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{width: '100%'}}>\r\n                <Card style={{width: '100%', padding: 40,marginBottom:20}}>\r\n                    <div dangerouslySetInnerHTML={this.initData()}/>\r\n\r\n                </Card>\r\n                <Clipboard data-clipboard-text={this.initClipboard()}>\r\n                    copy to clipboard\r\n                </Clipboard>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport MyTable from \"./component/MyTable/MyTable\";\nimport startTranslate from \"./Translate\";\nimport {convertCharStr2jEsc} from \"./convertUtf8\";\nimport * as moment from 'moment';\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Content from \"./component/content/Content\";\nimport Row from \"react-bootstrap/Row\";\nimport Card from \"react-bootstrap/Card\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {label: '', listLabel: [], key: '', page: '', validated: false};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onUpdate = this.onUpdate.bind(this);\n        this.handleChangeKey = this.handleChangeKey.bind(this)\n        this.handleChangePage = this.handleChangePage.bind(this)\n    }\n\n    onUpdate(listLabel) {\n        this.setState(previousState => (\n            {...previousState, listLabel: listLabel}\n        ));\n    }\n\n    handleSubmit(event) {\n        let now = moment().format('DD/MM/YYYY');\n        event.preventDefault();\n        event.stopPropagation();\n        let listLabel = this.state.listLabel.slice();\n        if (event.currentTarget.checkValidity()) {\n            this.setState(previousState => (\n                {...previousState, label: ''}\n            ));\n            startTranslate(this.state.label, (translation) => {\n                this.convertChart(translation);\n                let key = translation.en.split(' ').slice(0, 3).join('_').toLocaleLowerCase();\n                translation.key = `${this.state.key}.${key}`;\n                translation.date = now;\n                listLabel.forEach((label) => {\n                    if (label.key === translation.key) {\n                        translation.key = translation.key + '_x'\n                    }\n                });\n                listLabel.push(translation);\n                this.setState(previousState => (\n                    {...previousState, listLabel: listLabel}\n                ))\n            });\n        }\n        this.setState(previousState => (\n            {...previousState, validated: true}\n        ));\n\n    }\n\n    convertChart(translation) {\n        translation.it = translation.it.split('\\'').join('’');\n        translation.en = translation.en.split('\\'').join('’');\n        translation.es = translation.es.split('\\'').join('’');\n        translation.fr = translation.fr.split('\\'').join('’');\n    }\n\n    handleChange(event) {\n        this.setState({label: event.target.value});\n    }\n\n    handleChangeKey(event) {\n        this.setState({key: event.target.value});\n    }\n\n    handleChangePage(event) {\n        this.setState({page: event.target.value});\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Container>\n                    <Card style={{marginTop: 20, padding: 20, marginBottom: 20}}>\n                        <Form noValidate\n                              validated={this.state.validated}\n                              onSubmit={e => this.handleSubmit(e)}>\n                            <Form.Group as={Row} controlId=\"labelKey\">\n                                <Form.Label column sm=\"3\">\n                                    Page name\n                                </Form.Label>\n                                <Col sm=\"9\">\n                                    <Form.Control type=\"text\" onChange={this.handleChangePage}\n                                                  name=\"key\" value={this.state.page}/>\n\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"labelKey\">\n                                <Form.Label column sm=\"3\">\n                                    Key word\n                                </Form.Label>\n                                <Col sm=\"9\">\n                                    <Form.Control type=\"text\" onChange={this.handleChangeKey}\n                                                  name=\"key\" required value={this.state.key}/>\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please provide a valid Key.\n                                    </Form.Control.Feedback>\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"3\">\n                                    Label text\n                                </Form.Label>\n                                <Col sm=\"9\">\n                                    <Form.Control type=\"text\" onChange={this.handleChange}\n                                                  name=\"lablel\" required value={this.state.label}/>\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please provide a valid text.\n                                    </Form.Control.Feedback>\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row}>\n                                <Col>\n                                    <Button variant=\"primary\" type=\"submit\">Submit</Button>\n                                </Col>\n                            </Form.Group>\n                        </Form>\n                    </Card>\n                    <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\n                        <Tab eventKey=\"home\" title=\"Table\">\n                            <MyTable listLabel={this.state.listLabel} onUpdate={this.onUpdate}/>\n                        </Tab>\n                        <Tab eventKey=\"fr\" title=\"FR\">\n                            <Content listLabel={this.state.listLabel} page={this.state.page} select=\"fr\"/>\n                        </Tab>\n                        <Tab eventKey=\"it\" title=\"IT\">\n                            <Content listLabel={this.state.listLabel} page={this.state.page} select=\"it\"/>\n                        </Tab>\n                        <Tab eventKey=\"es\" title=\"ES\">\n                            <Content listLabel={this.state.listLabel} page={this.state.page} select=\"es\"/>\n                        </Tab>\n                        <Tab eventKey=\"en\" title=\"EN\">\n                            <Content listLabel={this.state.listLabel} page={this.state.page} select=\"en\"/>\n                        </Tab>\n                    </Tabs>\n\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","export default function startTranslate(text,callback) {\r\n    fetch('google-translate', {\r\n        method: 'POST',\r\n        // mode: \"no-cors\",\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({text: text}),\r\n    }).then((response) => response.json())\r\n        .then((responseJson) => {\r\n            callback(responseJson);\r\n        })\r\n        .catch((error) => {\r\n            console.error(error);\r\n        });\r\n    ;\r\n\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}